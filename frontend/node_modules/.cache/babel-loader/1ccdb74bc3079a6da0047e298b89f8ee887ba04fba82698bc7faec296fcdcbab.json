{"ast":null,"code":"//http.js\n\nconst queryClient = new QueryClient();\nexport async function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    const error = new Error(\"Could not fetch events\");\n    error.code = response.status;\n    error.info = await response.json();\n    throw error;\n  }\n  const {\n    events\n  } = await response.json();\n  return events;\n}\nexport async function eventDetailLoader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    const error = new Error(\"Could not fetch event details\");\n    error.code = response.status;\n    error.info = await response.json();\n    throw error;\n  } else {\n    const data = await response.json();\n    return data;\n  }\n}\nexport async function deleteAction({\n  eventId,\n  request\n}) {\n  const id = eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id, {\n    method: request.method\n  });\n  if (!response.ok) {\n    const error = new Error(\"Could not fetch event details\");\n    error.code = response.status;\n    error.info = await response.json();\n    throw error;\n  }\n}\nexport async function createEditEventAction(eventData) {\n  const response = await fetch(`http://localhost:3000/events`, {\n    method: 'POST',\n    body: JSON.stringify(eventData),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  if (!response.ok) {\n    const error = new Error('An error occurred while creating the event');\n    error.code = response.status;\n    error.info = await response.json();\n    throw error;\n  }\n  const {\n    event\n  } = await response.json();\n  return event;\n}\nexport async function action({\n  request,\n  params\n}) {\n  const method = request.method;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  let url = 'http://localhost:8080/events';\n  if (method === 'PATCH') {\n    const eventId = params.eventId;\n    url = 'http://localhost:8080/events/' + eventId;\n  }\n  const response = await fetch(url, {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n\n  // if (!response.ok) {\n  //   throw json({ message: 'Could not save event.' }, { status: 500 });\n  // }\n\n  // return redirect('/events');\n}","map":{"version":3,"names":["queryClient","QueryClient","loadEvents","response","fetch","ok","error","Error","code","status","info","json","events","eventDetailLoader","request","params","id","eventId","data","deleteAction","method","createEditEventAction","eventData","body","JSON","stringify","headers","event","action","formData","title","get","image","date","description","url"],"sources":["D:/Vusal/programming/React Udemy/21 SPA with React Query/12-adv-starting-project/frontend/src/util/http.js"],"sourcesContent":["//http.js\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport async function loadEvents() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    const error = new Error(\"Could not fetch events\");\r\n    error.code = response.status;\r\n    error.info = await response.json();\r\n    throw error;\r\n  }\r\n\r\n  const { events } = await response.json();\r\n\r\n  return events;\r\n}\r\n\r\nexport async function eventDetailLoader({ request, params }) {\r\n  const id = params.eventId;\r\n\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n  if (!response.ok) {\r\n    const error = new Error(\"Could not fetch event details\");\r\n    error.code = response.status;\r\n    error.info = await response.json();\r\n    throw error;\r\n  } else {\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n}\r\n\r\n\r\nexport async function deleteAction({ eventId, request }) {\r\n  const id = eventId;\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id, {\r\n    method: request.method,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const error = new Error(\"Could not fetch event details\");\r\n    error.code = response.status;\r\n    error.info = await response.json();\r\n    throw error;\r\n  }\r\n\r\n}\r\n\r\nexport async function createEditEventAction(eventData) {\r\n  const response = await fetch(`http://localhost:3000/events`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(eventData),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  \r\n\r\n  if (!response.ok) {\r\n    const error = new Error('An error occurred while creating the event');\r\n    error.code = response.status;\r\n    error.info = await response.json();\r\n    throw error;\r\n  }\r\n\r\n  const { event } = await response.json();\r\n\r\n  return event;\r\n}\r\n\r\n\r\nexport async function action({ request, params }) {\r\n  const method = request.method;\r\n  const data = await request.formData();\r\n\r\n  const eventData = {\r\n    title: data.get('title'),\r\n    image: data.get('image'),\r\n    date: data.get('date'),\r\n    description: data.get('description'),\r\n  };\r\n\r\n  let url = 'http://localhost:8080/events';\r\n\r\n  if (method === 'PATCH') {\r\n    const eventId = params.eventId;\r\n    url = 'http://localhost:8080/events/' + eventId;\r\n  }\r\n\r\n  const response = await fetch(url, {\r\n    method: method,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(eventData),\r\n  });\r\n\r\n  if (response.status === 422) {\r\n    return response;\r\n  }\r\n\r\n  // if (!response.ok) {\r\n  //   throw json({ message: 'Could not save event.' }, { status: 500 });\r\n  // }\r\n\r\n  // return redirect('/events');\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}